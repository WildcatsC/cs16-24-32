Exercise 1.1:

1.	e m a c s SP e x e r 1 . h t m l Enter

2.	C-s H T M L Enter

3.	C-s s c a v e n g e r C-r Enter

4.	C-s s e l f - r e f e r e n t i a l C-r Enter

5.	C-s a r r o w C-r Enter

6.	C-e

7.	C-a

8.	I did not use any of the arrow keys. Instead, I used emacs commands
	as a substitute. For example, the command C-e can achieve the task
	that require holding the RightArrow for a long time. Also, C-s can
	achieve the task that require both manual search and press of a lot
	of arrow keys.
	
9.	I did not use any of the arrow keys.

10.	C-x C-c

--------------------------------------------------------------------------------

Exercise 1.2:

1. 	e m a c s SP e x e r 2 . h t m l Enter

2. 	M-g g 1 8 Enter C-k

3.	C-s < ! - - C-r Enter C-k

4. 	C-s < ! - - C-r Enter C-k C-k C-k C-k C-k

5. 	C-s < ! - - C-r Enter C-M-k C-d
	C-s < ! - - C-r Enter C-@ C-n C-n C-n C-e C-w
	C-s < ! - - C-r Enter C-k
	C-x C-s
	C-x C-c
    In shell:
        diff -u exer1.html exer2.html >exer2.diff

--------------------------------------------------------------------------------

Exercise 1.3:

1. 	e m a c s SP e x e r 3 . h t m l Enter

2. 	M-% SP 1 Enter SP 4 2 Enter y y q

3. 	M-< M-% U T F - 8 Enter U S - A S C I I Enter y q

4. 	M-< C-M-s [ ^ [ : a s c i i : ] ] C-a C-k

5. 	M-< C-s < / o l > C-e Enter

6. 	C-x C-s
	C-x C-c
    In shell:
	diff -u exer1.html exer3.html >exer3.html

--------------------------------------------------------------------------------

Exercise 1.4:

1. 	
    In shell:
	cat exer2.html exer2.diff >exer4.html
	
2. 	e m a c s SP e x e r 4 . h t m l

3. 	M-> C-r - - > C-a C-f C-@ C-e M-w M-g g 4 0 0 Enter C-y

4. 	M-> C-r - - > C-r C-p C-p C-p C-@ 
	C-n C-n C-n C-e M-w M-g g 3 8 5 Enter 
	C-y C-a C-d C-p C-d C-p C-d
	
	M-> C-r - - > C-r C-r C-b C-b C-b C-b C-@
	C-s > Enter M-w M-g g 3 8 4 Enter C-s g Enter
	C-y
	
	M-> C-r - - > C-r C-r C-r C-p C-p C-a C-f C-@
	C-n C-n C-e M-w M-g g 3 4 0 Enter
	C-y C-a C-d C-p C-d
	
	M-> C-r D E L C-a C-f C-@ C-e M-w 
	M-g g 1 2 7 Enter
	C-y
	
	M-> C-r U N I X C-a C-f C-@ C-e M-w 
	M-g g 1 8 Enter
	C-y
	
5. 	M-< C-s - - - SP C-r C-@ M-> C-w

6. 	C-x u

7. 	M-< C-s - - - SP C-r Enter < ! - -
	M-% - - > Enter < Enter y y y y y y
	M-> - - >
	
8. 	M-< M-% < o l > Enter < o L > Enter
	y y y y y y y
	  There are 7 occurrence of "<ol>"
	  
9. 	C-x C-s
	C-x C-c
    In shell:
	diff -u exer1.html exer4.html >exer4.diff

--------------------------------------------------------------------------------

Exercise 1.5:

1. 	e m a c s Enter
	M-x m k d i r Enter
	j u n k Enter
	
2. 	C-x C-f j u n k / h e l l o . c 
	    # steps that copy the code to emacs
	C-x C-s
	
3. 	M-x c o m p i l e
	Backspace Backspace Backspace Backspace
	Backspace Backspace Backspace Backspace
	g c c SP - o SP e x e r 5 SP h e l l o . c Enter
	
4. 	M-x c o m p i l e
	ArrowDown . / e x e r 5
	C-x o 
	C-x C-w h e l l o - o u t
	
5.	C-@ M-> M-x a p p e n d - t o - f i l e Enter
	Backspace Backspace Backspace Backspace
	Backspace Backspace Backspace
	~/CS35L/lab1/key1.txt Enter

-*- mode: compilation; default-directory: "~/junk/" -*-
Compilation started at Thu Oct  4 23:22:43

./hello
#include <stdio.h>
int
main (void)
{
  char n = '\n', b = '\\', q = '"';
  char const *p = "#include <stdio.h>%cint%cmain (void)%c{%c  char n = '%cn', b = '%c%c', q = '%c';%c  char const *p = %c%s%c;%c  printf (p, n, n, n, n, b, b, b, q, n, q, p, q, n, n, n, n);%c  return 0;%c}%c";
  printf (p, n, n, n, n, b, b, b, q, n, q, p, q, n, n, n, n);
  return 0;
}

Compilation finished at Thu Oct  4 23:22:43

--------------------------------------------------------------------------------

Exercise 1.6:

1.	e m a c s Enter
	C-x b Enter
	
2.	( r a n d o m SP " 4 0 4 - 8 5 5 - 2 9 5 " ) C-j
	  # I got -1186240285494961665
	
3. 	( s e t q SP x SP ( r a n d o m ) ) C-j
	( s e t q SP y SP ( r a n d o m ) ) C-j
	  # I got x is 1670311443687324182
	  # I got y is -261077172588211584
	
4. 	( * SP x SP y ) C-j
	  # I got the result 523907216967309056
	  # This answer is not mathematically correct
	  
5. 	M - : ( * SP x SP y ) C-j
	  # I got the same result as in question 4
	  
6. 	No, the computer generate pseudo-random numbers.
	The random numbers are generated through an algorithm with a given seed.
	Thus, although not very obvious, there is actaully trend in the "random
	number" generated by the computer. Moreover, the existence of the upper
	and lower limit (from -2^61 to 2^61-1) also restrict the true randomness
	of the "random number"generated by computer. A truely random number
	should not follow any trend and have no boundaries that limit its value.
	
7.	When the limit is not specified the 'random' function generate random
	number ranging from -2^61 to 2^61-1. However, the product of the two
	random number must be fall into this range for the product to be
	mathematically correct. Otherwise, there will be a overflow.

	The probability that the answer is mathematically correct
	can be approximated by assuming x and y are continous.
	Then we just need to calculate the area defined by inequalities
	abs(x*y) < 2^61, -2^61 < x < 2^61, and -2^61 < y < 2^61. The result
	is equal to this equation:
	4*(2^61 + integral of 2^61/x from 1 to 2^61), which has value:
	4*(61*ln(2)*2^61 + 2^61).
	Now, divide this by the area of the plane of all within-range x and y,
	we have the probability that the answer is mathematically correct is
	(61*ln(2)+1)/2^61 = 1.88e-17. So the probability that the answer is
	mathematically incorrect is 1 - 1.88e-17, which is very close to 1. 

--------------------------------------------------------------------------------
